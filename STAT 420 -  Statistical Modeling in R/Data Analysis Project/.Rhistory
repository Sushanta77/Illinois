adjr2_poly_model[6] = summary(poly5_model)$adj.r.squared
adjr2_poly_model[7] = summary(poly6_model)$adj.r.squared
#Creating Empty list
rss_poly_model = rep(0,7)
rmse_poly_model = rep(0,7)
rmse_loocv_poly_model = rep(0,7)
#Populate RSS
rss_poly_model[1] = sum((resid(mlr_model))^2)
rss_poly_model[2] = sum((resid(log_mlr_model))^2)
rss_poly_model[3] = sum((resid(poly2_model))^2)
rss_poly_model[4] = sum((resid(poly3_model))^2)
rss_poly_model[5] = sum((resid(poly4_model))^2)
rss_poly_model[6] = sum((resid(poly5_model))^2)
rss_poly_model[7] = sum((resid(poly6_model))^2)
#Populate RMSE
rmse_poly_model[1] = sqrt(mean(sum((resid(mlr_model))^2)))
rmse_poly_model[2] = sqrt(mean(sum((resid(log_mlr_model))^2)))
rmse_poly_model[3] = sqrt(mean(sum((resid(poly2_model))^2)))
rmse_poly_model[4] = sqrt(mean(sum((resid(poly3_model))^2)))
rmse_poly_model[5] = sqrt(mean(sum((resid(poly4_model))^2)))
rmse_poly_model[6] = sqrt(mean(sum((resid(poly5_model))^2)))
rmse_poly_model[7] = sqrt(mean(sum((resid(poly6_model))^2)))
#Populate RMSE LOOC
rmse_loocv_poly_model[1] = sqrt(mean((resid(mlr_model)/(1-hatvalues(mlr_model)))^2))
rmse_loocv_poly_model[2] = sqrt(mean((resid(log_mlr_model)/(1-hatvalues(mlr_model)))^2))
rmse_loocv_poly_model[3] = sqrt(mean((resid(poly2_model)/(1-hatvalues(poly2_model)))^2))
rmse_loocv_poly_model[4] = sqrt(mean((resid(poly3_model)/(1-hatvalues(poly3_model)))^2))
rmse_loocv_poly_model[5] = sqrt(mean((resid(poly4_model)/(1-hatvalues(poly4_model)))^2))
rmse_loocv_poly_model[6] = sqrt(mean((resid(poly5_model)/(1-hatvalues(poly4_model)))^2))
rmse_loocv_poly_model[7] = sqrt(mean((resid(poly6_model)/(1-hatvalues(poly6_model)))^2))
black = "#2C3E50"
grey = "#ECF0F1"
green = "#009999"
purple = "#990073"
blue = "blue4"
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
polynomial_degree = 1:7
plot(polynomial_degree, rss_poly_model, type = "b",
ylim = c(min(rss_poly_model), max(rss_poly_model)), col = purple, lwd = 2,
xlab = "Polynomial Degree", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Polynomial Degree")
plot(polynomial_degree, rmse_poly_model, type = "b",
ylim = c(min(rmse_poly_model), max(rmse_poly_model)), col = green, lwd = 2,
xlab = "Polynomial Degree", ylab = "Root Mean Square (RMSE)", main = "RMSE Vs Polynomial Degree")
plot(polynomial_degree, rmse_loocv_poly_model, type = "b",
ylim = c(min(rmse_loocv_poly_model), max(rmse_loocv_poly_model)), col = blue, lwd = 2,
xlab = "Polynomial Degree", ylab = "Root Mean Square (RMSE) LOOCV", main = "RMSE LOOCV Vs Polynomial Degree")
gold = "gold4"
red = "darkred"
orchid = "darkorchid2"
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
polynomial_degree = 1:7
plot(polynomial_degree, r2_poly_model, type = "b",
ylim = c(min(r2_poly_model), max(r2_poly_model)), col = gold, lwd = 2,
xlab = "Polynomial Degree", ylab = "R2", main = "R2 Vs Polynomial Degree")
plot(polynomial_degree, adjr2_poly_model, type = "b",
ylim = c(min(adjr2_poly_model), max(adjr2_poly_model)), col = red, lwd = 2,
xlab = "Polynomial Degree", ylab = "Adjusted R2", main = "Adjusted R2 Vs Polynomial Degree")
plot(polynomial_degree, train_test_error_poly_model, type = "b",
ylim = c(min(train_test_error_poly_model), max(train_test_error_poly_model)), col = orchid, lwd = 2,
xlab = "Polynomial Degree", ylab = "Average Percent Error", main = "Average Percent Error Vs Polynomial Degree")
polynomial_degree
r2_poly_model
gold = "gold4"
red = "darkred"
orchid = "darkorchid2"
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
polynomial_degree = 1:7
plot(polynomial_degree, r2_poly_model, type = "b",
ylim = c(min(r2_poly_model), max(r2_poly_model)), col = gold, lwd = 2,
xlab = "Polynomial Degree", ylab = "R2", main = "R2 Vs Polynomial Degree")
plot(polynomial_degree, adjr2_poly_model, type = "b",
ylim = c(min(adjr2_poly_model), max(adjr2_poly_model)), col = red, lwd = 2,
xlab = "Polynomial Degree", ylab = "Adjusted R2", main = "Adjusted R2 Vs Polynomial Degree")
plot(polynomial_degree, train_test_error_poly_model, type = "b",
ylim = c(min(train_test_error_poly_model), max(train_test_error_poly_model)), col = orchid, lwd = 2,
xlab = "Polynomial Degree", ylab = "Average Percent Error", main = "Average Percent Error Vs Polynomial Degree")
rss_final_model[12]
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
point (12,rss_final_model[12])
points(12,rss_final_model[12])
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
points(12,rss_final_model[12], col = "red", pch = 16, cex =3 )
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
points(12,rss_final_model[12], col = "red", pch = 1, cex =3 )
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
points(12,rss_final_model[12], col = "green", pch = 1, cex =3 )
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
points(12,rss_final_model[12], col = "darkgreen", pch = 1, cex =3 )
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
points(12,rss_final_model[12], col = "darkgreen", pch = 1, cex =5 )
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
points(12,rss_final_model[12], col = "darkgreen", pch = 2, cex =5 )
par(mfrow = c(1, 3), oma = c(0, 0, 5, 0))
Final_Model = 1:16
plot(Final_Model, rss_final_model, type = "b",
ylim = c(min(rss_final_model), max(rss_final_model)), col = purple, lwd = 2,
xlab = "Final Model", ylab = "Residual Sum Square (RSS)", main = "RSS Vs Final Models")
points(12,rss_final_model[12], col = "red", pch = 1, cex =3 )
train_test_error_final_model[12]
library(lmtest)
options(scipen = 1, digits = 4, width = 80)
library(knitr)
opts_chunk$set(cache = TRUE, autodep = TRUE)
library(faraway)
Variable = data.frame(
VariableName = c("ID","Age", "Height", "Sex", "Smoker", "FEV"),
Category = c("Numeric","Numeric", "Numeric", "Categorical", "Categorical", "Numeric"),
Description = c("Uniquely Identified Row","Age of the child", "Height of the child in inches", "Sex of the child ", "Whether the child is a non-smoker or current smoker", "FEV of the child in litres")
)
library(knitr)
kable(Variable, format = "pandoc",padding = 2)
childfev = read.csv("http://www.statsci.org/data/general/fev.txt",
sep = "\t",
quote = "\"",
comment.char = "",
stringsAsFactors = FALSE)
childfev$Sex = as.factor(childfev$Sex)
childfev$Smoker = as.factor(childfev$Smoker)
#add log(FEV)
childfev$logFEV=log(childfev$FEV)
#add FEV^2
childfev$sqFEV=childfev$FEV^2
str(childfev)
dim(childfev)
head(childfev$FEV,10)
pairs(childfev[c('Age','FEV','logFEV','sqFEV','Height','Sex','Smoker')], col = "darkgrey")
cor(childfev[c('Age','Height','FEV', 'logFEV', 'sqFEV')])
summarize = function(model, plot_title = '',plot=FALSE) {
sm1 = summary(model)
sm1
RSS1 = sum((resid(model)) ^ 2)
RMSE1 = sqrt(mean(sum((resid(
model
)) ^ 2)))
LOOCV1 = sqrt(mean((resid(model) / (
1 - hatvalues(model)
)) ^ 2))
bp1 = bptest(model)
st1 = shapiro.test(resid(model))
f = sm1$fstatistic
p = pf(f[1], f[2], f[3], lower.tail = FALSE)
if (plot) { par(mfrow = c(1, 2))
plot(
resid(model) ~ fitted(model),
ylab = "residuals",
xlab = "fitted",
cex = 1,
pch = 1,
col = "darkgrey",
main = paste('Fitt. vs. Res. Plot', plot_title)
)
abline(h = 0, lwd = 2, col = "darkorange")
qqnorm(resid(model),
cex = 1,
pch = 1,
col = "darkgrey")
qqline(resid(model), lwd = 2, col = "darkorange")}
df = data.frame(
Metric = c(
"# of Parameters",
"RSS",
"RMSE",
"RMSE LOOCV",
"R^2",
"Adj. R^2",
"BP p-value",
"Shapiro test p-value",
"Colinearity - max(VIF)",
"Significance of Reg. p-value"
),
Value = c(
length(coef(model)),
RSS1,
RMSE1,
LOOCV1,
sm1$r.squared,
sm1$adj.r.squared,
bp1$p.value ,
st1$p.value,
max(vif(model)),
p
)
)
}
mlr_model = lm(logFEV ~ Age + Height + Sex + Smoker, data = childfev)
simple=lm(FEV ~ Age + Height + Sex + Smoker, data = childfev)
summary(mlr_model)
df_mlr_model=summarize(mlr_model,plot_title="log(FEV) MLR",plot=TRUE)
kable(df_mlr_model, format = "pandoc", padding = 2)
summary(simple)
df_simple=summarize(simple,plot_title="FEV MLR",plot=TRUE)
kable(df_simple, format = "pandoc", padding = 2)
null=lm(logFEV~1, data = childfev)
A=lm(logFEV ~ Age, data = childfev)
AH=lm(logFEV ~ Age + Height, data = childfev)
AH_Sx=lm(logFEV ~ Age + Height + Sex , data = childfev)
anova(A,null)[2,'Pr(>F)']
anova(AH,A)[2,'Pr(>F)']
anova(AH_Sx,AH)[2,'Pr(>F)']
anova(mlr_model,AH)[2,'Pr(>F)']
poly2 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) , data = childfev)
poly3 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) , data = childfev)
poly4 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) + I(Age^4) + I(Height^4), data = childfev)
poly5 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) + I(Age^4) + I(Height^4) + I(Age^5) + I(Height^5), data = childfev)
poly6 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) + I(Age^4) + I(Height^4) + I(Age^5) + I(Height^5) + I(Age^6) + I(Height^6), data = childfev)
df_poly2=summarize(poly2,plot_title="",plot=FALSE)
df_poly3=summarize(poly3,plot_title="",plot=FALSE)
df_poly4=summarize(poly4,plot_title="",plot=FALSE)
df_poly5=summarize(poly5,plot_title="",plot=FALSE)
df_poly6=summarize(poly6,plot_title="",plot=FALSE)
ASx = lm(logFEV ~ (Age + Sex) ^ 2 , data = childfev)
ASm = lm(logFEV ~ (Age + Smoker) ^ 2 , data = childfev)
ASxSm = lm(logFEV ~ Age + Sex + Smoker + Age:Sex + Age:Smoker , data = childfev)
HSx = lm(logFEV ~ (Height + Sex) ^ 2 , data = childfev)
HSm = lm(logFEV ~ (Height + Smoker) ^ 2 , data = childfev)
HSxSm = lm(logFEV ~ Height + Sex + Smoker + Height:Sex + Height:Smoker , data = childfev)
AllbutAH = lm(logFEV ~ Age + Height + Sex + Smoker + Age:Sex + Age:Smoker + Height:Sex + Height:Smoker, data = childfev)
All = lm(logFEV ~ Age + Height + Sex + Smoker + Age:Sex + Age:Smoker + Height:Sex + Height:Smoker + Age:Height, data = childfev)
two_way = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 2, data = childfev)
three_way = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 3, data = childfev)
df_ASx=summarize(ASx,plot_title="",plot=FALSE)
df_ASm=summarize(ASm,plot_title="",plot=FALSE)
df_ASxSm=summarize(ASm,plot_title="",plot=FALSE)
df_HSx=summarize(HSx,plot_title="",plot=FALSE)
df_HSm=summarize(HSm,plot_title="",plot=FALSE)
df_HSxSm=summarize(HSxSm,plot_title="",plot=FALSE)
df_AllbutAH=summarize(AllbutAH,plot_title="",plot=FALSE)
df_All=summarize(All,plot_title="",plot=FALSE)
two_way=summarize(two_way,plot_title="",plot=FALSE)
three_way=summarize(three_way,plot_title="",plot=FALSE)
big_model = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 3 + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3), data = childfev) # Big Model - Polynomial degree 3 + 3 Way Interaction
poly2_int_model8 = lm(logFEV ~ Age + Height + Sex + Smoker + Age:Sex + Age:Smoker + Height:Sex + Height:Smoker + Age:Height , data = childfev) # Polynomial degree 2 + All Interaction Except Sex:Smoker
poly2_int_model9 = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 2, data = childfev) # Polynomial degree 2 + 2 Way Interaction
poly2_int_model10 = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 3, data = childfev) # Polynomial degree 2 + 3 Way Interaction
df_big=summarize(big_model,plot_title="",plot=FALSE)
df_poly2_int_model8=summarize(poly2_int_model8,plot_title="",plot=FALSE)
df_poly2_int_model9=summarize(poly2_int_model9,plot_title="",plot=FALSE)
df_poly2_int_model10=summarize(poly2_int_model10,plot_title="",plot=FALSE)
n = length(resid(big_model))
big_model_aic = step(big_model, direction = "backward", trace = 0)
big_model_bic = step(big_model, direction = "backward", k = log(n), trace = 0)
summary(big_model_aic)
summary(big_model_bic)
df_big_model_aic=summarize(big_model_aic,plot_title="REDUCED",plot=FALSE)
df_big_model_bic=summarize(big_model_bic,plot_title="REDUCED",plot=FALSE)
compare_model= cbind(
df_simple,
df_mlr_model$Value,
df_poly2$Value,
df_poly3$Value,
df_poly4$Value,
df_poly5$Value,
df_poly6$Value,
df_ASx$Value,
df_ASm$Value,
df_ASxSm$Value,
df_HSx$Value,
df_HSm$Value,
df_HSxSm$Value,
df_AllbutAH$Value,
df_All$Value,
two_way$Value,
three_way$Value,
df_big$Value,
df_poly2_int_model8$Value,
df_poly2_int_model9$Value,
df_poly2_int_model10$Value,
df_big_model_aic$Value,
df_big_model_bic$Value
)
colnames(compare_model) =   c("Measure", "FEV MLR",
"log(FEV) MLR",
"QUAD",
"CUBE",
"Poly 4",
"Poly 5",
"Poly 6",
"Age:Sex",
"Age:Smoker",
"Age:Sex:Smoker",
"Height:Sex",
"Height:Smoker",
"Height:Sex:Smoker",
"All but Age, Height",
"All",
"2 WAY",
"3 WAY",
"BIG",
"Poly2 + 2 way int",
"Poly2 + all 2 way int",
"Poly2 + all 3 way int",
"REDUCED AIC",
"REDUCED BIC"
)
kable(t(compare_model[1:5,]), format = "pandoc",padding = 2, caption="Table 1: Model Metrics ")
kable(t(compare_model[6:10,]), format = "pandoc",padding = 2,caption="Table 2: Model Metrics continued ")
results = t(compare_model[, 2:24])
colnames(results) = compare_model[, 1]
results_df = data.frame(results)
#colnames(results_df)
#row.names(results_df)[(which(results_df$RMSE.LOOCV==min(results_df$RMSE.LOOCV)))]
kable(results_df[c("RSS", "RMSE"  ,
"RMSE.LOOCV" ,
"R.2"                  ,
"Adj..R.2"  ,
"Colinearity...max.VIF.")],
format = "pandoc",
padding = 2,
caption = "Table 3: Model Metrics - subset")
row.names(results_df[with(results_df, order(RMSE.LOOCV)),])
sqrt(mean(sum((resid(
model
)) ^ 2)))
library(lmtest)
options(scipen = 1, digits = 4, width = 80)
library(knitr)
opts_chunk$set(cache = TRUE, autodep = TRUE)
library(faraway)
childfev = read.csv("http://www.statsci.org/data/general/fev.txt",
sep = "\t",
quote = "\"",
comment.char = "",
stringsAsFactors = FALSE)
childfev$Sex = as.factor(childfev$Sex)
childfev$Smoker = as.factor(childfev$Smoker)
#add log(FEV)
childfev$logFEV=log(childfev$FEV)
#add FEV^2
childfev$sqFEV=childfev$FEV^2
str(childfev)
dim(childfev)
head(childfev$FEV,10)
mlr_model = lm(logFEV ~ Age + Height + Sex + Smoker, data = childfev)
simple=lm(FEV ~ Age + Height + Sex + Smoker, data = childfev)
summary(mlr_model)
df_mlr_model=summarize(mlr_model,plot_title="log(FEV) MLR",plot=TRUE)
kable(df_mlr_model, format = "pandoc", padding = 2)
summary(simple)
df_simple=summarize(simple,plot_title="FEV MLR",plot=TRUE)
kable(df_simple, format = "pandoc", padding = 2)
poly2 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) , data = childfev)
poly3 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) , data = childfev)
poly4 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) + I(Age^4) + I(Height^4), data = childfev)
poly5 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) + I(Age^4) + I(Height^4) + I(Age^5) + I(Height^5), data = childfev)
poly6 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3) + I(Age^4) + I(Height^4) + I(Age^5) + I(Height^5) + I(Age^6) + I(Height^6), data = childfev)
df_poly2=summarize(poly2,plot_title="",plot=FALSE)
df_poly2=summarize(poly2,plot_title="",plot=FALSE)
df_poly3=summarize(poly3,plot_title="",plot=FALSE)
df_poly4=summarize(poly4,plot_title="",plot=FALSE)
df_poly5=summarize(poly5,plot_title="",plot=FALSE)
df_poly6=summarize(poly6,plot_title="",plot=FALSE)
summarize(poly2,plot_title="",plot=TRUE)
ASx = lm(logFEV ~ (Age + Sex) ^ 2 , data = childfev)
ASm = lm(logFEV ~ (Age + Smoker) ^ 2 , data = childfev)
ASxSm = lm(logFEV ~ Age + Sex + Smoker + Age:Sex + Age:Smoker , data = childfev)
HSx = lm(logFEV ~ (Height + Sex) ^ 2 , data = childfev)
HSm = lm(logFEV ~ (Height + Smoker) ^ 2 , data = childfev)
HSxSm = lm(logFEV ~ Height + Sex + Smoker + Height:Sex + Height:Smoker , data = childfev)
AllbutAH = lm(logFEV ~ Age + Height + Sex + Smoker + Age:Sex + Age:Smoker + Height:Sex + Height:Smoker, data = childfev)
All = lm(logFEV ~ Age + Height + Sex + Smoker + Age:Sex + Age:Smoker + Height:Sex + Height:Smoker + Age:Height, data = childfev)
two_way = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 2, data = childfev)
three_way = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 3, data = childfev)
df_ASx=summarize(ASx,plot_title="",plot=FALSE)
df_ASm=summarize(ASm,plot_title="",plot=FALSE)
df_ASxSm=summarize(ASm,plot_title="",plot=FALSE)
df_HSx=summarize(HSx,plot_title="",plot=FALSE)
df_HSm=summarize(HSm,plot_title="",plot=FALSE)
df_HSxSm=summarize(HSxSm,plot_title="",plot=FALSE)
df_AllbutAH=summarize(AllbutAH,plot_title="",plot=FALSE)
df_All=summarize(All,plot_title="",plot=FALSE)
two_way=summarize(two_way,plot_title="",plot=FALSE)
three_way=summarize(three_way,plot_title="",plot=FALSE)
big_model = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 3 + I(Age^2) + I(Height^2) + I(Age^3) + I(Height^3), data = childfev) # Big Model - Polynomial degree 3 + 3 Way Interaction
poly2_int_model8 = lm(logFEV ~ Age + Height + Sex + Smoker + Age:Sex + Age:Smoker + Height:Sex + Height:Smoker + Age:Height , data = childfev) # Polynomial degree 2 + All Interaction Except Sex:Smoker
poly2_int_model9 = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 2, data = childfev) # Polynomial degree 2 + 2 Way Interaction
poly2_int_model10 = lm(logFEV ~ (Age + Height + Sex + Smoker) ^ 3, data = childfev) # Polynomial degree 2 + 3 Way Interaction
df_big=summarize(big_model,plot_title="",plot=FALSE)
df_poly2_int_model8=summarize(poly2_int_model8,plot_title="",plot=FALSE)
df_poly2_int_model9=summarize(poly2_int_model9,plot_title="",plot=FALSE)
df_poly2_int_model10=summarize(poly2_int_model10,plot_title="",plot=FALSE)
n = length(resid(big_model))
big_model_aic = step(big_model, direction = "backward", trace = 0)
big_model_bic = step(big_model, direction = "backward", k = log(n), trace = 0)
summary(big_model_aic)
summary(big_model_bic)
df_big_model_aic=summarize(big_model_aic,plot_title="REDUCED",plot=FALSE)
df_big_model_bic=summarize(big_model_bic,plot_title="REDUCED",plot=FALSE)
compare_model= cbind(
df_simple,
df_mlr_model$Value,
df_poly2$Value,
df_poly3$Value,
df_poly4$Value,
df_poly5$Value,
df_poly6$Value,
df_ASx$Value,
df_ASm$Value,
df_ASxSm$Value,
df_HSx$Value,
df_HSm$Value,
df_HSxSm$Value,
df_AllbutAH$Value,
df_All$Value,
two_way$Value,
three_way$Value,
df_big$Value,
df_poly2_int_model8$Value,
df_poly2_int_model9$Value,
df_poly2_int_model10$Value,
df_big_model_aic$Value,
df_big_model_bic$Value
)
colnames(compare_model) =   c("Measure", "FEV MLR",
"log(FEV) MLR",
"QUAD",
"CUBE",
"Poly 4",
"Poly 5",
"Poly 6",
"Age:Sex",
"Age:Smoker",
"Age:Sex:Smoker",
"Height:Sex",
"Height:Smoker",
"Height:Sex:Smoker",
"All but Age, Height",
"All",
"2 WAY",
"3 WAY",
"BIG",
"Poly2 + 2 way int",
"Poly2 + all 2 way int",
"Poly2 + all 3 way int",
"REDUCED AIC",
"REDUCED BIC"
)
kable(t(compare_model[1:5,]), format = "pandoc",padding = 2, caption="Table 1: Model Metrics ")
kable(t(compare_model[6:10,]), format = "pandoc",padding = 2,caption="Table 2: Model Metrics continued ")
big_model_aic
summary(big_model_aic)$coefficient
length(summary(big_model_aic)$coefficient)
coef(big_model_aic)
length(coef(big_model_aic))
big_model_aic
resid(big_model_aic)
exp(resid(big_model_aic))
childfev$FEV
childfev$FEV - exp(resid(big_model_aic))
(childfev$FEV - exp(resid(big_model_aic)))^2
sqrt((childfev$FEV - exp(resid(big_model_aic)))^2)
mean((childfev$FEV - exp(resid(big_model_aic)))^2)
sqrt(mean((childfev$FEV - exp(resid(big_model_aic)))^2))
poly2 = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) , data = childfev)
poly2_log = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) , data = childfev)
poly2 = lm(FEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) , data = childfev)
ploy2
poly2_l = lm(logFEV ~ Sex + Smoker + Age + Height + I(Age^2) + I(Height^2) , data = childfev)
poly2_l
poly2
sum((childfev$FEV - fitted(poly2))^2)
sum(resid(poly2))
sum(resid(poly2)^2)
mean(sum((childfev$FEV - fitted(poly2))^2))
sqrt(mean(sum((childfev$FEV - fitted(poly2))^2)))
sqrt(mean(sum((childfev$FEV - fitted(poly2_l))^2)))
sqrt(mean(sum((childfev$FEV - exp(fitted(poly2_l))^2)))
sqrt(mean(sum((childfev$FEV - fitted(poly2))^2)))
(resid(poly2)^2)
sum(resid(poly2)^2)
sqrt(sum(resid(poly2)^2))
sqrt(sum(resid(poly2_l)^2))
sum((childfev$FEV - exp(fitted(poly2_l)))^2)
mean(sum((childfev$FEV - exp(fitted(poly2_l)))^2))
sqrt(mean(resid(poly2)^2))
sqrt(mean((childfev$FEV - exp(fitted(poly2_l)))^2))
sqrt(sum(resid(poly2_l)^2))
sqrt(mean(resid(poly2_l)^2))
exp(sqrt(mean(resid(poly2_l)^2)))
sqrt(mean(resid(poly2_l)^2))
